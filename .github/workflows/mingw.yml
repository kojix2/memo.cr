name: Build MinGW Package

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v5

      - uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: >-
            git
            make
            unzip
            zip
            curl
            mingw-w64-x86_64-crystal
            mingw-w64-x86_64-shards
            mingw-w64-x86_64-gcc
            mingw-w64-x86_64-pkg-config
            mingw-w64-x86_64-openssl
            mingw-w64-x86_64-sqlite3

      - name: Build (MinGW) via script
        shell: msys2 {0}
        env:
          WV2_VER: 1.0.1150.38
        run: |
          bash build-mingw.sh

      - name: Install Inno Setup
        run: |
          choco install innosetup -y
          echo "C:\Program Files (x86)\Inno Setup 6" >> $env:GITHUB_PATH

      - name: Create installer with Inno Setup
        env:
          INNO_SETUP_PATH: 'C:\Program Files (x86)\Inno Setup 6\ISCC.exe'
        run: |
          powershell.exe -ExecutionPolicy Bypass -File package-win.ps1

      - name: Upload artifacts
        uses: actions/upload-artifact@v5
        with:
          name: memo-windows-mingw
          path: |
            dist/*.exe
            dist/*.zip

      - run: ls dist

      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: ${{ github.ref_name }}
          tag_name: ${{ github.ref_name }}
          files: |
            dist/*mingw64.exe
